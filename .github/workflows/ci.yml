## A basic GitHub Actions workflow for your Quarkus application.

name: CI build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AZURE_FUNCTIONAPP_NAME: funqyhttptrigger      # set this to your function app name on Azure
  POM_XML_DIRECTORY: '.'                     # set this to the directory which contains pom.xml file
  POM_FUNCTIONAPP_NAME: funqy-azure-example        # set this to the function app name in your local development environment
  JAVA_VERSION: '1.17.x'                      # set this to the java version to use

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub action'
        uses: actions/checkout@v3

      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: maven

      - name: 'Build'
        run: ./mvnw clean package -DskipTests -Dnative

      - name: Archive the function zip
        uses: actions/upload-artifact@v3
        with:
          name: function-zip
          path: target/funqyhttptrigger.zip

  deploy:
      needs: build
      runs-on: ubuntu-latest
      steps:
      - name: Download the zip
        uses: actions/download-artifact@v3
        with:
          name: function-zip

      - name: Display structure of downloaded files
        run: ls -R
  
      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'testjava-oscar'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_0D55FB92497747F9A5EF391B1A247512 }}
          package: '${{ env.PACKAGE_DIRECTORY }}'
          respect-pom-xml: true
